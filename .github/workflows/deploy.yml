name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies for widget
        run: |
          cd widget-src
          npm ci
      
      - name: Build widget
        run: |
          cd widget-src
          npm run build
      
      - name: Install dependencies for backend
        run: |
          cd backend
          npm ci
      
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/ec2.pem
          chmod 600 ~/.ssh/ec2.pem
          echo -e "Host ec2\n\tHostName ${{ secrets.EC2_HOST }}\n\tUser ${{ secrets.EC2_USERNAME }}\n\tIdentityFile ~/.ssh/ec2.pem\n\tStrictHostKeyChecking no" > ~/.ssh/config
      
      - name: Deploy to EC2
        run: |
          # Create a temporary directory for deployment
          mkdir -p deploy
          
          # Copy backend files
          cp -r backend/* deploy/
          
          # The widget is already built to backend/public/assistant.js by Vite
          # No need to copy it separately
          
          # Create a simple deployment script
          echo '#!/bin/bash
          cd ${{ secrets.EC2_REPO_PATH }}
          npm ci
          
          # Check if PM2 is installed, if not install it
          if ! command -v pm2 &> /dev/null; then
            echo "Installing PM2..."
            sudo npm install -g pm2
          fi
          
          # Stop any existing server
          sudo pm2 stop server || true
          sudo pm2 delete server || true
          
          # Start the server with sudo to allow binding to port 80 in production
          # Set NODE_ENV to production to use port 80
          sudo NODE_ENV=production pm2 start server.js --name "react-widget"
          
          # Make sure the server is running
          sudo pm2 save
          
          # Check if the server is running
          sudo pm2 status
          
          # Print the URL where the widget can be accessed
          echo "Widget should be accessible at: http://${{ secrets.EC2_HOST }}/assistant.js"' > deploy/deploy.sh
          chmod +x deploy/deploy.sh
          
          # Deploy to EC2
          scp -r deploy/* ec2:${{ secrets.EC2_REPO_PATH }}/
          
          # Execute deployment script on EC2
          ssh ec2 "cd ${{ secrets.EC2_REPO_PATH }} && chmod +x deploy.sh && ./deploy.sh" 